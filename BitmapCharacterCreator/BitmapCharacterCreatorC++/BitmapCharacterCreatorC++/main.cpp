#include <stdio.h>
#include <iostream>
#include <iomanip>
using namespace std;

/*
resulting bitmap:
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, },
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, },
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, },
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, },
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, },
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, },
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, },
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, },
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, },
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, },
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, },
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, },
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, },
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, },
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, },
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, },
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, },
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, },
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, },
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, },
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, },
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, },
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, },
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, },
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, },
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, },
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, },
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, },
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, },
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, },
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, },
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, },
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, },
{ 0x18, 0x3c, 0x3c, 0x18, 0x18, 0x00, 0x18, 0x00, },
{ 0x36, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, },
{ 0x36, 0x36, 0x7f, 0x36, 0x7f, 0x36, 0x36, 0x00, },
{ 0x0c, 0x3e, 0x03, 0x1e, 0x30, 0x1f, 0x0c, 0x00, },
{ 0x00, 0x63, 0x33, 0x18, 0x0c, 0x66, 0x63, 0x00, },
{ 0x1c, 0x36, 0x1c, 0x6e, 0x3b, 0x33, 0x6e, 0x00, },
{ 0x06, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, },
{ 0x18, 0x0c, 0x06, 0x06, 0x06, 0x0c, 0x18, 0x00, },
{ 0x06, 0x0c, 0x18, 0x18, 0x18, 0x0c, 0x06, 0x00, },
{ 0x00, 0x66, 0x3c, 0xff, 0x3c, 0x66, 0x00, 0x00, },
{ 0x00, 0x0c, 0x0c, 0x3f, 0x0c, 0x0c, 0x00, 0x00, },
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x0c, 0x06, },
{ 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, },
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x0c, 0x00, },
{ 0x60, 0x30, 0x18, 0x0c, 0x06, 0x03, 0x01, 0x00, },
{ 0x3e, 0x63, 0x73, 0x7b, 0x6f, 0x67, 0x3e, 0x00, },
{ 0x0c, 0x0e, 0x0c, 0x0c, 0x0c, 0x0c, 0x3f, 0x00, },
{ 0x1e, 0x33, 0x30, 0x1c, 0x06, 0x33, 0x3f, 0x00, },
{ 0x1e, 0x33, 0x30, 0x1c, 0x30, 0x33, 0x1e, 0x00, },
{ 0x38, 0x3c, 0x36, 0x33, 0x7f, 0x30, 0x78, 0x00, },
{ 0x3f, 0x03, 0x1f, 0x30, 0x30, 0x33, 0x1e, 0x00, },
{ 0x1c, 0x06, 0x03, 0x1f, 0x33, 0x33, 0x1e, 0x00, },
{ 0x3f, 0x33, 0x30, 0x18, 0x0c, 0x0c, 0x0c, 0x00, },
{ 0x1e, 0x33, 0x33, 0x1e, 0x33, 0x33, 0x1e, 0x00, },
{ 0x1e, 0x33, 0x33, 0x3e, 0x30, 0x18, 0x0e, 0x00, },
{ 0x00, 0x0c, 0x0c, 0x00, 0x00, 0x0c, 0x0c, 0x00, },
{ 0x00, 0x0c, 0x0c, 0x00, 0x00, 0x0c, 0x0c, 0x06, },
{ 0x18, 0x0c, 0x06, 0x03, 0x06, 0x0c, 0x18, 0x00, },
{ 0x00, 0x00, 0x3f, 0x00, 0x00, 0x3f, 0x00, 0x00, },
{ 0x06, 0x0c, 0x18, 0x30, 0x18, 0x0c, 0x06, 0x00, },
{ 0x1e, 0x33, 0x30, 0x18, 0x0c, 0x00, 0x0c, 0x00, },
{ 0x3e, 0x63, 0x7b, 0x7b, 0x7b, 0x03, 0x1e, 0x00, },
{ 0x0c, 0x1e, 0x33, 0x33, 0x3f, 0x33, 0x33, 0x00, },
{ 0x3f, 0x66, 0x66, 0x3e, 0x66, 0x66, 0x3f, 0x00, },
{ 0x3c, 0x66, 0x03, 0x03, 0x03, 0x66, 0x3c, 0x00, },
{ 0x1f, 0x36, 0x66, 0x66, 0x66, 0x36, 0x1f, 0x00, },
{ 0x7f, 0x46, 0x16, 0x1e, 0x16, 0x46, 0x7f, 0x00, },
{ 0x7f, 0x46, 0x16, 0x1e, 0x16, 0x06, 0x0f, 0x00, },
{ 0x3c, 0x66, 0x03, 0x03, 0x73, 0x66, 0x7c, 0x00, },
{ 0x33, 0x33, 0x33, 0x3f, 0x33, 0x33, 0x33, 0x00, },
{ 0x1e, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x1e, 0x00, },
{ 0x78, 0x30, 0x30, 0x30, 0x33, 0x33, 0x1e, 0x00, },
{ 0x67, 0x66, 0x36, 0x1e, 0x36, 0x66, 0x67, 0x00, },
{ 0x0f, 0x06, 0x06, 0x06, 0x46, 0x66, 0x7f, 0x00, },
{ 0x63, 0x77, 0x7f, 0x7f, 0x6b, 0x63, 0x63, 0x00, },
{ 0x63, 0x67, 0x6f, 0x7b, 0x73, 0x63, 0x63, 0x00, },
{ 0x1c, 0x36, 0x63, 0x63, 0x63, 0x36, 0x1c, 0x00, },
{ 0x3f, 0x66, 0x66, 0x3e, 0x06, 0x06, 0x0f, 0x00, },
{ 0x1e, 0x33, 0x33, 0x33, 0x3b, 0x1e, 0x38, 0x00, },
{ 0x3f, 0x66, 0x66, 0x3e, 0x36, 0x66, 0x67, 0x00, },
{ 0x1e, 0x33, 0x07, 0x0e, 0x38, 0x33, 0x1e, 0x00, },
{ 0x3f, 0x2d, 0x0c, 0x0c, 0x0c, 0x0c, 0x1e, 0x00, },
{ 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x3f, 0x00, },
{ 0x33, 0x33, 0x33, 0x33, 0x33, 0x1e, 0x0c, 0x00, },
{ 0x63, 0x63, 0x63, 0x6b, 0x7f, 0x77, 0x63, 0x00, },
{ 0x63, 0x63, 0x36, 0x1c, 0x1c, 0x36, 0x63, 0x00, },
{ 0x33, 0x33, 0x33, 0x1e, 0x0c, 0x0c, 0x1e, 0x00, },
{ 0x7f, 0x63, 0x31, 0x18, 0x4c, 0x66, 0x7f, 0x00, },
{ 0x1e, 0x06, 0x06, 0x06, 0x06, 0x06, 0x1e, 0x00, },
{ 0x03, 0x06, 0x0c, 0x18, 0x30, 0x60, 0x40, 0x00, },
{ 0x1e, 0x18, 0x18, 0x18, 0x18, 0x18, 0x1e, 0x00, },
{ 0x08, 0x1c, 0x36, 0x63, 0x00, 0x00, 0x00, 0x00, },
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, },
{ 0x0c, 0x0c, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, },
{ 0x00, 0x00, 0x1e, 0x30, 0x3e, 0x33, 0x6e, 0x00, },
{ 0x07, 0x06, 0x06, 0x3e, 0x66, 0x66, 0x3b, 0x00, },
{ 0x00, 0x00, 0x1e, 0x33, 0x03, 0x33, 0x1e, 0x00, },
{ 0x38, 0x30, 0x30, 0x3e, 0x33, 0x33, 0x6e, 0x00, },
{ 0x00, 0x00, 0x1e, 0x33, 0x3f, 0x03, 0x1e, 0x00, },
{ 0x1c, 0x36, 0x06, 0x0f, 0x06, 0x06, 0x0f, 0x00, },
{ 0x00, 0x00, 0x6e, 0x33, 0x33, 0x3e, 0x30, 0x1f, },
{ 0x07, 0x06, 0x36, 0x6e, 0x66, 0x66, 0x67, 0x00, },
{ 0x0c, 0x00, 0x0e, 0x0c, 0x0c, 0x0c, 0x1e, 0x00, },
{ 0x30, 0x00, 0x30, 0x30, 0x30, 0x33, 0x33, 0x1e, },
{ 0x07, 0x06, 0x66, 0x36, 0x1e, 0x36, 0x67, 0x00, },
{ 0x0e, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x1e, 0x00, },
{ 0x00, 0x00, 0x33, 0x7f, 0x7f, 0x6b, 0x63, 0x00, },
{ 0x00, 0x00, 0x1f, 0x33, 0x33, 0x33, 0x33, 0x00, },
{ 0x00, 0x00, 0x1e, 0x33, 0x33, 0x33, 0x1e, 0x00, },
{ 0x00, 0x00, 0x3b, 0x66, 0x66, 0x3e, 0x06, 0x0f, },
{ 0x00, 0x00, 0x6e, 0x33, 0x33, 0x3e, 0x30, 0x78, },
{ 0x00, 0x00, 0x3b, 0x6e, 0x66, 0x06, 0x0f, 0x00, },
{ 0x00, 0x00, 0x3e, 0x03, 0x1e, 0x30, 0x1f, 0x00, },
{ 0x08, 0x0c, 0x3e, 0x0c, 0x0c, 0x2c, 0x18, 0x00, },
{ 0x00, 0x00, 0x33, 0x33, 0x33, 0x33, 0x6e, 0x00, },
{ 0x00, 0x00, 0x33, 0x33, 0x33, 0x1e, 0x0c, 0x00, },
{ 0x00, 0x00, 0x63, 0x6b, 0x7f, 0x7f, 0x36, 0x00, },
{ 0x00, 0x00, 0x63, 0x36, 0x1c, 0x36, 0x63, 0x00, },
{ 0x00, 0x00, 0x33, 0x33, 0x33, 0x3e, 0x30, 0x1f, },
{ 0x00, 0x00, 0x3f, 0x19, 0x0c, 0x26, 0x3f, 0x00, },
{ 0x38, 0x0c, 0x0c, 0x07, 0x0c, 0x0c, 0x38, 0x00, },
{ 0x18, 0x18, 0x18, 0x00, 0x18, 0x18, 0x18, 0x00, },
{ 0x07, 0x0c, 0x0c, 0x38, 0x0c, 0x0c, 0x07, 0x00, },
{ 0x6e, 0x3b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, },
{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, },



original bitmap is in the code below


*/





struct HexCharStruct
{
	unsigned char c;
	HexCharStruct(unsigned char _c) : c(_c) { }
};

inline std::ostream& operator<<(std::ostream& o, const HexCharStruct& hs)
{
	return (o << std::hex << (int)hs.c);
}

inline HexCharStruct hex(unsigned char _c)
{
	return HexCharStruct(_c);
}

int main(void)
{
	char entire_original[128][8] = {
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
		{ 0x18, 0x3C, 0x3C, 0x18, 0x18, 0x00, 0x18, 0x00 },
		{ 0x36, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
		{ 0x36, 0x36, 0x7F, 0x36, 0x7F, 0x36, 0x36, 0x00 },
		{ 0x0C, 0x3E, 0x03, 0x1E, 0x30, 0x1F, 0x0C, 0x00 },
		{ 0x00, 0x63, 0x33, 0x18, 0x0C, 0x66, 0x63, 0x00 },
		{ 0x1C, 0x36, 0x1C, 0x6E, 0x3B, 0x33, 0x6E, 0x00 },
		{ 0x06, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00 },
		{ 0x18, 0x0C, 0x06, 0x06, 0x06, 0x0C, 0x18, 0x00 },
		{ 0x06, 0x0C, 0x18, 0x18, 0x18, 0x0C, 0x06, 0x00 },
		{ 0x00, 0x66, 0x3C, 0xFF, 0x3C, 0x66, 0x00, 0x00 },
		{ 0x00, 0x0C, 0x0C, 0x3F, 0x0C, 0x0C, 0x00, 0x00 },
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x0C, 0x06 },
		{ 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00 },
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x0C, 0x00 },
		{ 0x60, 0x30, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x00 },
		{ 0x3E, 0x63, 0x73, 0x7B, 0x6F, 0x67, 0x3E, 0x00 },
		{ 0x0C, 0x0E, 0x0C, 0x0C, 0x0C, 0x0C, 0x3F, 0x00 },
		{ 0x1E, 0x33, 0x30, 0x1C, 0x06, 0x33, 0x3F, 0x00 },
		{ 0x1E, 0x33, 0x30, 0x1C, 0x30, 0x33, 0x1E, 0x00 },
		{ 0x38, 0x3C, 0x36, 0x33, 0x7F, 0x30, 0x78, 0x00 },
		{ 0x3F, 0x03, 0x1F, 0x30, 0x30, 0x33, 0x1E, 0x00 },
		{ 0x1C, 0x06, 0x03, 0x1F, 0x33, 0x33, 0x1E, 0x00 },
		{ 0x3F, 0x33, 0x30, 0x18, 0x0C, 0x0C, 0x0C, 0x00 },
		{ 0x1E, 0x33, 0x33, 0x1E, 0x33, 0x33, 0x1E, 0x00 },
		{ 0x1E, 0x33, 0x33, 0x3E, 0x30, 0x18, 0x0E, 0x00 },
		{ 0x00, 0x0C, 0x0C, 0x00, 0x00, 0x0C, 0x0C, 0x00 },
		{ 0x00, 0x0C, 0x0C, 0x00, 0x00, 0x0C, 0x0C, 0x06 },
		{ 0x18, 0x0C, 0x06, 0x03, 0x06, 0x0C, 0x18, 0x00 },
		{ 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00 },
		{ 0x06, 0x0C, 0x18, 0x30, 0x18, 0x0C, 0x06, 0x00 },
		{ 0x1E, 0x33, 0x30, 0x18, 0x0C, 0x00, 0x0C, 0x00 },
		{ 0x3E, 0x63, 0x7B, 0x7B, 0x7B, 0x03, 0x1E, 0x00 },
		{ 0x0C, 0x1E, 0x33, 0x33, 0x3F, 0x33, 0x33, 0x00 },
		{ 0x3F, 0x66, 0x66, 0x3E, 0x66, 0x66, 0x3F, 0x00 },
		{ 0x3C, 0x66, 0x03, 0x03, 0x03, 0x66, 0x3C, 0x00 },
		{ 0x1F, 0x36, 0x66, 0x66, 0x66, 0x36, 0x1F, 0x00 },
		{ 0x7F, 0x46, 0x16, 0x1E, 0x16, 0x46, 0x7F, 0x00 },
		{ 0x7F, 0x46, 0x16, 0x1E, 0x16, 0x06, 0x0F, 0x00 },
		{ 0x3C, 0x66, 0x03, 0x03, 0x73, 0x66, 0x7C, 0x00 },
		{ 0x33, 0x33, 0x33, 0x3F, 0x33, 0x33, 0x33, 0x00 },
		{ 0x1E, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x1E, 0x00 },
		{ 0x78, 0x30, 0x30, 0x30, 0x33, 0x33, 0x1E, 0x00 },
		{ 0x67, 0x66, 0x36, 0x1E, 0x36, 0x66, 0x67, 0x00 },
		{ 0x0F, 0x06, 0x06, 0x06, 0x46, 0x66, 0x7F, 0x00 },
		{ 0x63, 0x77, 0x7F, 0x7F, 0x6B, 0x63, 0x63, 0x00 },
		{ 0x63, 0x67, 0x6F, 0x7B, 0x73, 0x63, 0x63, 0x00 },
		{ 0x1C, 0x36, 0x63, 0x63, 0x63, 0x36, 0x1C, 0x00 },
		{ 0x3F, 0x66, 0x66, 0x3E, 0x06, 0x06, 0x0F, 0x00 },
		{ 0x1E, 0x33, 0x33, 0x33, 0x3B, 0x1E, 0x38, 0x00 },
		{ 0x3F, 0x66, 0x66, 0x3E, 0x36, 0x66, 0x67, 0x00 },
		{ 0x1E, 0x33, 0x07, 0x0E, 0x38, 0x33, 0x1E, 0x00 },
		{ 0x3F, 0x2D, 0x0C, 0x0C, 0x0C, 0x0C, 0x1E, 0x00 },
		{ 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x3F, 0x00 },
		{ 0x33, 0x33, 0x33, 0x33, 0x33, 0x1E, 0x0C, 0x00 },
		{ 0x63, 0x63, 0x63, 0x6B, 0x7F, 0x77, 0x63, 0x00 },
		{ 0x63, 0x63, 0x36, 0x1C, 0x1C, 0x36, 0x63, 0x00 },
		{ 0x33, 0x33, 0x33, 0x1E, 0x0C, 0x0C, 0x1E, 0x00 },
		{ 0x7F, 0x63, 0x31, 0x18, 0x4C, 0x66, 0x7F, 0x00 },
		{ 0x1E, 0x06, 0x06, 0x06, 0x06, 0x06, 0x1E, 0x00 },
		{ 0x03, 0x06, 0x0C, 0x18, 0x30, 0x60, 0x40, 0x00 },
		{ 0x1E, 0x18, 0x18, 0x18, 0x18, 0x18, 0x1E, 0x00 },
		{ 0x08, 0x1C, 0x36, 0x63, 0x00, 0x00, 0x00, 0x00 },
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF },
		{ 0x0C, 0x0C, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00 },
		{ 0x00, 0x00, 0x1E, 0x30, 0x3E, 0x33, 0x6E, 0x00 },
		{ 0x07, 0x06, 0x06, 0x3E, 0x66, 0x66, 0x3B, 0x00 },
		{ 0x00, 0x00, 0x1E, 0x33, 0x03, 0x33, 0x1E, 0x00 },
		{ 0x38, 0x30, 0x30, 0x3e, 0x33, 0x33, 0x6E, 0x00 },
		{ 0x00, 0x00, 0x1E, 0x33, 0x3f, 0x03, 0x1E, 0x00 },
		{ 0x1C, 0x36, 0x06, 0x0f, 0x06, 0x06, 0x0F, 0x00 },
		{ 0x00, 0x00, 0x6E, 0x33, 0x33, 0x3E, 0x30, 0x1F },
		{ 0x07, 0x06, 0x36, 0x6E, 0x66, 0x66, 0x67, 0x00 },
		{ 0x0C, 0x00, 0x0E, 0x0C, 0x0C, 0x0C, 0x1E, 0x00 },
		{ 0x30, 0x00, 0x30, 0x30, 0x30, 0x33, 0x33, 0x1E },
		{ 0x07, 0x06, 0x66, 0x36, 0x1E, 0x36, 0x67, 0x00 },
		{ 0x0E, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x1E, 0x00 },
		{ 0x00, 0x00, 0x33, 0x7F, 0x7F, 0x6B, 0x63, 0x00 },
		{ 0x00, 0x00, 0x1F, 0x33, 0x33, 0x33, 0x33, 0x00 },
		{ 0x00, 0x00, 0x1E, 0x33, 0x33, 0x33, 0x1E, 0x00 },
		{ 0x00, 0x00, 0x3B, 0x66, 0x66, 0x3E, 0x06, 0x0F },
		{ 0x00, 0x00, 0x6E, 0x33, 0x33, 0x3E, 0x30, 0x78 },
		{ 0x00, 0x00, 0x3B, 0x6E, 0x66, 0x06, 0x0F, 0x00 },
		{ 0x00, 0x00, 0x3E, 0x03, 0x1E, 0x30, 0x1F, 0x00 },
		{ 0x08, 0x0C, 0x3E, 0x0C, 0x0C, 0x2C, 0x18, 0x00 },
		{ 0x00, 0x00, 0x33, 0x33, 0x33, 0x33, 0x6E, 0x00 },
		{ 0x00, 0x00, 0x33, 0x33, 0x33, 0x1E, 0x0C, 0x00 },
		{ 0x00, 0x00, 0x63, 0x6B, 0x7F, 0x7F, 0x36, 0x00 },
		{ 0x00, 0x00, 0x63, 0x36, 0x1C, 0x36, 0x63, 0x00 },
		{ 0x00, 0x00, 0x33, 0x33, 0x33, 0x3E, 0x30, 0x1F },
		{ 0x00, 0x00, 0x3F, 0x19, 0x0C, 0x26, 0x3F, 0x00 },
		{ 0x38, 0x0C, 0x0C, 0x07, 0x0C, 0x0C, 0x38, 0x00 },
		{ 0x18, 0x18, 0x18, 0x00, 0x18, 0x18, 0x18, 0x00 },
		{ 0x07, 0x0C, 0x0C, 0x38, 0x0C, 0x0C, 0x07, 0x00 },
		{ 0x6E, 0x3B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	};

	char original[8] = { 0x01, 0x10, 0x02, 0x20, 0xFF, 0x00, 0x55, 0xaa }; // testing string for bit inversions
		//{ 0x1C, 0x36, 0x1C, 0x6E, 0x3B, 0x33, 0x6E, 0x00 };
	char orig_temp = 0;
	char compare = 0xaa;
	char inverted[8];
	char invert_temp = 0;

	for (int k = 0; k < 127; k++)
	{
		cout << "{ ";
		for (int l = 0; l < 8; l++)
		{ 
			original[l] = entire_original[k][l];
		}
		for (int j = 0; j < 8; j++)
		{
			orig_temp = original[j];
			for (int i = 0; i < 8; i++)
			{
				if ((orig_temp >> i) & 1)
				{
					invert_temp |= 1 << (7 - i);
				}
			}
			inverted[j] = invert_temp;
			invert_temp = 0;
			
			//cout << "original character: " << original[j] << " inverted character:" << inverted[j] << endl;
			//cout << "original in hex: " << hex(original[j]) << "inverted in hex: " << hex(inverted[j]) << endl;
			
			cout << "0x" << setw(2) << setfill('0') << hex(inverted[j]) << ", ";
			//invert_temp = 0;
		}
		cout << "}," << endl;
		//{ 0x6E, 0x3B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	}
	return 0;
}